# Generated by Django 3.0.8 on 2022-08-26 14:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orders_from_1c', models.BooleanField(default=False, verbose_name='Создавать новые заказы и контрагенты из 1с')),
                ('order_prefix', models.CharField(blank=True, default='', max_length=31, verbose_name='Префикс номера заказа при выгрузке')),
                ('only_paid_orders', models.BooleanField(default=False, verbose_name='Выгружать только оплаченные заказ')),
                ('only_allowed_delivery_orders', models.BooleanField(default=False, verbose_name='Выгружать только заказы c разрешенной доставкой')),
                ('change_statuses_from_1c', models.BooleanField(default=False, verbose_name='Менять статусы заказов по информации из 1С')),
                ('orders_status_gte', models.CharField(choices=[('created', 'Создан'), ('processing', 'В обработке'), ('waiting', 'Ожидает в пункте самовывоза'), ('transfered', 'Передан в службу доставки'), ('completed', 'Выполнен'), ('canceled', 'Отменен'), ('awaiting', 'Ожидает оплаты'), ('paid', 'Оплачено')], default='created', max_length=15, verbose_name='Выгружать заказы начиная со статуса')),
                ('delivery_for_new', models.CharField(choices=[('not', 'Без доставки'), ('pickup', 'Самовывоз'), ('corier', 'Курьер')], default='not', max_length=15, verbose_name='Служба доставки для новых отгрузок')),
                ('full_name', models.BooleanField(default=True, verbose_name='Полное наименование')),
                ('name', models.BooleanField(default=True, verbose_name='Имя')),
                ('last_name', models.BooleanField(default=True, verbose_name='Фамилия')),
                ('address', models.BooleanField(default=True, verbose_name='Адрес')),
                ('postcode', models.BooleanField(default=True, verbose_name='Почтовый индекс')),
                ('city', models.BooleanField(default=True, verbose_name='Город')),
                ('street', models.BooleanField(default=True, verbose_name='Улица')),
                ('email', models.BooleanField(default=True, verbose_name='Email')),
                ('full_name_ur', models.BooleanField(default=True, verbose_name='Полное наименование')),
                ('inn_ur', models.BooleanField(default=True, verbose_name='ИНН')),
                ('kpp_ur', models.BooleanField(default=True, verbose_name='КПП')),
                ('address_ur', models.BooleanField(default=True, verbose_name='Адрес')),
                ('country_ur', models.BooleanField(default=True, verbose_name='Страна')),
                ('city_ur', models.BooleanField(default=True, verbose_name='Город')),
                ('street_ur', models.BooleanField(default=True, verbose_name='Улица')),
                ('phone_ur', models.BooleanField(default=True, verbose_name='Контактный телефон')),
                ('email_ur', models.BooleanField(default=True, verbose_name='Email')),
                ('know_price_instead_add_cart_button', models.BooleanField(default=False, help_text='Если товар есть в наличии, но цена указана 0, то заменить кнопку "Добавить в корзину" на кнопку "Узнать цену"', verbose_name='Менять кнопку добавления в корзину на "Узнать цену"')),
                ('notify_instead_add_cart_button', models.BooleanField(default=False, help_text='Если товара нет в наличии, то заменяем кнопку "Добавить в корзину" на кнопку "Уведомить о поступлении"', verbose_name='Менять кнопку добавления в корзину на "Уведомить о поступлении"')),
                ('hide_not_in_stock', models.BooleanField(default=False, verbose_name='Скрывать в катлоге товар без наличия и цены')),
                ('variation_grouping', models.CharField(choices=[('not', '-'), ('code', 'По артикулу'), ('cat', 'По категории'), ('id1c', 'По ид 1с')], default='not', max_length=15, verbose_name='Группировать вариативные товары по')),
                ('last_export_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата последнего экспорта заказов')),
            ],
            options={
                'verbose_name': 'Настройки обмена',
                'verbose_name_plural': 'Настройки обмена',
            },
        ),
        migrations.CreateModel(
            name='OrderItemXml',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('shop.orderitem',),
        ),
        migrations.CreateModel(
            name='OrderXml',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('shop.order',),
        ),
    ]
